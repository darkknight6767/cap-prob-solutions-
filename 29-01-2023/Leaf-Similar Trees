/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     List<Integer> node1 = new ArrayList<>();
    List<Integer> node2 = new ArrayList<>();
    
void search1(TreeNode root){
    if(root==null){
        return;
    }
    if(root.left == null && root.right == null){
        node1.add(root.val);
    }
    search1(root.left);
    search1(root.right);
}
void search2(TreeNode root){
    if(root==null){
        return;
    }
    if(root.left == null && root.right == null){
        node2.add(root.val);
    }
    search2(root.left);
    search2(root.right);
    }
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        search1(root1);
        search2(root2);
        return node1.equals(node2);
    }
}
